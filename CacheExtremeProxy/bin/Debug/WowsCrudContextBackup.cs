//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:2.0.50727.5485
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WowsCrudNamespace
{
    using CacheEXTREME2.WProxyGlobal;
    using CacheEXTREME2.WMetaGlobal;
    using InterSystems.Globals;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class WowsCrudContext : CacheEXTREME2.WProxyGlobal.CacheEXTREMEcontext
    {
        
        public ProxyManager<ManufacturerProxy, ManufacturerProxyKey> ManufacturerManager;
        
        public ProxyManager<ShipCounterProxy, ShipCounterProxyKey> ShipCounterManager;
        
        public ProxyManager<ShipInfoProxy, ShipInfoProxyKey> ShipInfoManager;
        
        public WowsCrudContext(InterSystems.Globals.Connection conn , string global = "WowsCrud") : 
                base(conn, global, "WowsCrudMeta")
        {
            base.structsManagers.Add(new StructManager<Contact>(base.globalMeta.GetLocalStructs()[0], base.structsManagers));
            base.structsManagers.Add(new StructManager<Classification>(base.globalMeta.GetLocalStructs()[1], base.structsManagers));
            this.ManufacturerManager = new ProxyManager<ManufacturerProxy, ManufacturerProxyKey>(base.entitiesMeta[typeof(ManufacturerProxy).Name], base.globalRef, base.structsManagers);
            this.ShipCounterManager = new ProxyManager<ShipCounterProxy, ShipCounterProxyKey>(base.entitiesMeta[typeof(ShipCounterProxy).Name], base.globalRef, base.structsManagers);
            this.ShipInfoManager = new ProxyManager<ShipInfoProxy, ShipInfoProxyKey>(base.entitiesMeta[typeof(ShipInfoProxy).Name], base.globalRef, base.structsManagers);
        }
    }
    
    public class ManufacturerProxy
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        // name: Charge(Contact)=> struct Id 0;
        public Contact Charge;
        
        // name: Ports(List<name: Contact(Contact)=> struct Id 0;>), min: 0, max: 1000
        public List<Contact> Ports;
        
        public ManufacturerProxy(String Country, Contact Charge, List<Contact> Ports)
        {
            this.Country = Country;
            this.Charge = Charge;
            this.Ports = Ports;
        }
        
        public ManufacturerProxy()
        {
            this.Country = "Country";
            this.Charge = new Contact();
            this.Ports = new List<Contact>();
        }
        
        public virtual bool ManufacturerValidator(ManufacturerProxy entity)
        {
            return true;
        }
    }
    
    public class ManufacturerProxyKey
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        public ManufacturerProxyKey(String Country)
        {
            this.Country = Country;
        }
        
        public ManufacturerProxyKey()
        {
            this.Country = "Country";
        }
    }
    
    public class ShipCounterProxy
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        // name: Classification(Classification)=> struct Id 1;
        public Classification Classification;
        
        // name: Count(Int32), min: 0, max: 100500, def: 0
        public Int32 Count;
        
        public ShipCounterProxy(String Country, Classification Classification, Int32 Count)
        {
            this.Country = Country;
            this.Classification = Classification;
            this.Count = Count;
        }
        
        public ShipCounterProxy()
        {
            this.Country = "Country";
            this.Classification = new Classification();
            this.Count = 0;
        }
        
        public virtual bool ShipCounterValidator(ShipCounterProxy entity)
        {
            return true;
        }
    }
    
    public class ShipCounterProxyKey
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        // name: Classification(Classification)=> struct Id 1;
        public Classification Classification;
        
        public ShipCounterProxyKey(String Country, Classification Classification)
        {
            this.Country = Country;
            this.Classification = Classification;
        }
        
        public ShipCounterProxyKey()
        {
            this.Country = "Country";
            this.Classification = new Classification();
        }
    }
    
    public class ShipInfoProxy
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        // name: Classification(Classification)=> struct Id 1;
        public Classification Classification;
        
        // name: Name(String), min: 0, max: 255, def: ShipName
        public String Name;
        
        // name: Captain(Contact)=> struct Id 0;
        public Contact Captain;
        
        // name: StuffCount(Int32), min: 1, max: 5000, def: 1
        public Int32 StuffCount;
        
        // name: Efficienty(Double), min: 0, max: 1, def: 0
        public Double Efficienty;
        
        public ShipInfoProxy(String Country, Classification Classification, String Name, Contact Captain, Int32 StuffCount, Double Efficienty)
        {
            this.Country = Country;
            this.Classification = Classification;
            this.Name = Name;
            this.Captain = Captain;
            this.StuffCount = StuffCount;
            this.Efficienty = Efficienty;
        }
        
        public ShipInfoProxy()
        {
            this.Country = "Country";
            this.Classification = new Classification();
            this.Name = "ShipName";
            this.Captain = new Contact();
            this.StuffCount = 1;
            this.Efficienty = 0;
        }
        
        public virtual bool ShipInfoValidator(ShipInfoProxy entity)
        {
            return true;
        }
    }
    
    public class ShipInfoProxyKey
    {
        
        // name: Country(String), min: 0, max: 255, def: Country
        public String Country;
        
        // name: Classification(Classification)=> struct Id 1;
        public Classification Classification;
        
        // name: Name(String), min: 0, max: 255, def: ShipName
        public String Name;
        
        public ShipInfoProxyKey(String Country, Classification Classification, String Name)
        {
            this.Country = Country;
            this.Classification = Classification;
            this.Name = Name;
        }
        
        public ShipInfoProxyKey()
        {
            this.Country = "Country";
            this.Classification = new Classification();
            this.Name = "ShipName";
        }
    }
    
    public class Contact
    {
        
        // name: Name(String), min: 0, max: 255, def: Name
        public String Name;
        
        // name: Phone(Int32), min: 1111111, max: 9999999, def: 1111111
        public Int32? Phone;
        
        public Contact()
        {
            this.Name = "Name";
            this.Phone = 1111111;
        }
        
        public Contact(String Name, Int32? Phone)
        {
            this.Name = Name;
            this.Phone = Phone;
        }
    }
    
    public class Classification
    {
        
        // name: ClassType(String), min: 0, max: 255, def: ClassType
        public String ClassType;
        
        // name: Rank(Int32), min: 0, max: 10, def: 0
        public Int32? Rank;
        
        public Classification()
        {
            this.ClassType = "ClassType";
            this.Rank = 0;
        }
        
        public Classification(String ClassType, Int32? Rank)
        {
            this.ClassType = ClassType;
            this.Rank = Rank;
        }
    }
}
